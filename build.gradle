buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.10"
    id "net.franz-becker.gradle-lombok" version "1.5"
}

def api = new groovy.json.JsonSlurper().parseText(file("${api_token_path}").text)
def keystore = new groovy.json.JsonSlurper().parseText(file("${keystore_path}").text)
def mcVersion = project.mc_version

apply plugin: "net.minecraftforge.gradle.forge"

sourceSets.main {
    java {
        srcDirs = ["src/main/java", "dependencies/main/java", "src/api/java"]
    }
    resources {
        srcDirs = ["src/main/resources", "dependencies/main/resources", "src/api/resources"]
    }
}

version = project.version
group = "stevekung.mods.moreplanets"
archivesBaseName = "More-Planets-All"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.12.2-14.23.4.2708"
    runDir = "run"
    mappings = "snapshot_20171003"
    makeObfSourceJar = false

    replace "@FINGERPRINT@", keystore.sha1
    replace "4.0.1.-1", project.gc_require_version
    replaceIn "MorePlanetsMod.java"
}

repositories {
    // Hwyla
    maven {
        url "http://tehnut.info/maven/"
    }
    // JEI
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    // Code Chicken mods
    maven {
        url "http://chickenbones.net/maven/"
    }
    // Curse Gradle
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    // CTM
    maven {
        url "http://maven.tterrag.com/"
    }
}

dependencies {
    compile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    compile "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:deobf"
    deobfCompile "team.chisel.ctm:CTM:MC${ctm_version}"
    deobfCompile "mcp.mobius.waila:Hwyla:${hwyla_version}"
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    runtime "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:deobf"
}

curseforge {
    apiKey = api.more_planets
    project {
        id = "261990"
        changelog = "To read full change log use command /mpchangelog in-game.\n\n or following by this link: https://discord.gg/5KDqYh2"
        changelogType = "markdown"
        releaseType = "beta"
        addGameVersion mcVersion

        mainArtifact(file("build/libs/More-Planets-" + mcVersion + "-" + version + ".jar")) {
            displayName = "More-Planets-" + mcVersion + "-" + version
            relations {
                requiredLibrary "stevekungs-lib"
                optionalLibrary "jei"
                optionalLibrary "ctm"
                optionalLibrary "hwyla"
            }
        }
    }
}

lombok {
    version = "1.16.6"
    sha256 = "e0a471be03e1e6b02bf019480cec7a3ac9801702bf7bf62f15d077ad4df8dd5d"
}

ext.finalJar = "build/libs/" + "More-Planets-" + mcVersion + "-" + version + ".jar"
ext.coreJar = "build/libs/" + archivesBaseName + "-" + version + ".jar"
ext.coreFiles = ["stevekung/mods/moreplanets/**", "assets/moreplanets/**", "license.txt", "pack.mcmeta", "META-INF/moreplanets_at.cfg"]

// signing jar first
task buildJar(type: SignJar, dependsOn: "processJar") {
    keyStore = keystore.keystore_path
    alias = keystore.alias
    storePass = keystore.keystore_pass
    keyPass = keystore.keystore_pass
    inputFile = project.ext.finalJar
    outputFile = project.ext.finalJar
}

// processing jar
task processJar(type: Jar, dependsOn: "rePackAllJar") {
    outputs.upToDateWhen { false }
    baseName = "More-Planets-" + mcVersion

    from(zipTree(project.ext.coreJar)) {
        includes.addAll(project.ext.coreFiles)
    }
    manifest {
        attributes.put("FMLAT", "moreplanets_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

task rePackAllJar(type: Jar, dependsOn: "copyModFiles") {
    from "temporary"
}

task copyModFiles(type: Copy, dependsOn: "reobfJar") {
    from(zipTree(project.ext.coreJar))
    into "temporary"
}

task deleteTemporary(type: Delete) {
    delete "temporary"
}

task buildDeobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = "deobf"
    manifest {
        attributes.put("FMLAT", "moreplanets_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

buildJar.finalizedBy(deleteTemporary)